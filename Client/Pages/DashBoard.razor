@page "/page/dashboard"

@inject IDashBoardService _dashboardServicio;

@using ChartJs.Blazor.BarChart.Axes;
@using ChartJs.Blazor.Common;
@using ChartJs.Blazor.Common.Axes;
@using ChartJs.Blazor.Common.Axes.Ticks;
@using ChartJs.Blazor.BarChart;
@using ChartJs.Blazor.Util;

<MudContainer MaxWidth="MaxWidth.ExtraLarge" Class="mt-5">

    <MudText Typo="Typo.h5" GutterBottom="true">
        <MudIcon Icon="@Icons.Material.Filled.Insights" Color="Color.Info" Class="mx-4" Style="width:54px; height:30;"></MudIcon>
        DashBoard
    </MudText>

    <MudPaper Elevation="3" Class="pa-4" Width="100%">

        <MudGrid>
            <MudItem xs="12" sm="6" md="4">
                <div @onclick="(()=>LlamarPagina(1))" style="cursor:pointer">
                <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                    <MudIcon Icon="@Icons.Material.Filled.BookmarkAdd" Color="Color.Success" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
                    <div>
                        <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Plantillas</MudText>
                        <MudText Typo="Typo.h5">@dashboard.TotalPlantillas</MudText>
                    </div>
                </MudPaper>
                </div>
            </MudItem>
            <MudItem xs="12" sm="6" md="4">
                <div @onclick="(()=>LlamarPagina(2))" style="cursor:pointer">
                    <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                        <MudIcon Icon="@Icons.Material.Filled.LocalOffer" Color="Color.Secondary" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
                        <div>
                            <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Actas</MudText>
                            <MudText Typo="Typo.h5">@dashboard.TotalActas</MudText>
                        </div>
                    </MudPaper>
                </div>
            </MudItem>
            <MudItem xs="12" sm="6" md="4">
                <div @onclick="(()=>LlamarPagina(3))" style="cursor:pointer">
                <MudPaper Elevation="25" Class="d-flex flex-row pt-6 pb-4" Style="height:100px;">
                    <MudIcon Icon="@Icons.Material.Filled.Layers" Color="Color.Warning" Class="mx-4" Style="width:54px; height:54px;"></MudIcon>
                    <div>
                        <MudText Typo="Typo.subtitle1" Class="mud-text-secondary mb-n1">Inspecciones</MudText>
                        <MudText Typo="Typo.h5">@dashboard.TotalInspeccion</MudText>
                    </div>
                </MudPaper>
                </div>
            </MudItem>

            <MudItem xs="12" sm="12" md="12">
                <MudPaper Elevation="25" Style="height:310px;">

                    <Chart Config="barconfig" @ref="_chart"></Chart>

                </MudPaper>
            </MudItem>

        </MudGrid>

    </MudPaper>

</MudContainer>
@code {
    DashBoardDTO dashboard = new DashBoardDTO();

    private BarConfig barconfig;
    private Chart _chart = null!;


    protected override async Task OnInitializedAsync()
    {


        barconfig = new BarConfig
            {
                Options = new BarOptions
                {

                    MaintainAspectRatio = false,
                    Responsive = true,
                    Title = new OptionsTitle
                    {
                        Display = true
                    },
                    Scales = new BarScales
                    {
                        YAxes = new List<CartesianAxis>
                    {
                        new BarLinearCartesianAxis
                        {
                            Stacked = true,
                            MinBarLength = 0
                        }
                    }
                    }
                }
            };

        foreach (string lb in new[] { "temp" })
            barconfig.Data.Labels.Add(lb);

        IDataset<int> dataSet = new BarDataset<int>(new[] { 1 })
            {
                BackgroundColor = ColorUtil.ColorHexString(54, 162, 235),
                BorderColor = ColorUtil.ColorHexString(54, 162, 235),
                BorderWidth = 1
            };

        barconfig.Data.Datasets.Add(dataSet);

        int? idVendedor = 0;
        if (appData.usuarioRol == "Vendedor")
            idVendedor = appData.idVendedor;

        var response = await _dashboardServicio.Resumen(1);
        if (response.status)
        {
            dashboard = (DashBoardDTO)response.value!;
            var labels = dashboard.InspeccionUltimaSemana.Select(v => v.Area).ToArray();
            var values = dashboard.InspeccionUltimaSemana.Select(v => v.Total).ToArray();
            ConfigureChart(labels, values);
        }


    }

    private void LlamarPagina(int opcion)
    {
        if (opcion == 1)
            _navigationManager.NavigateTo("/page/plantilla");
        if (opcion == 2)
            _navigationManager.NavigateTo("/page/acta");
        if (opcion == 3)
            _navigationManager.NavigateTo("/page/RegistroInspeccion");

    }

    private void ConfigureChart(string[] labels, decimal[]? values)
    {
        barconfig.Data.Labels.Clear();

        barconfig.Data.Datasets.Clear();

        foreach (string lb in labels)
            barconfig.Data.Labels.Add(lb);

        IDataset<decimal> dataSet = new BarDataset<decimal>(values)
            {
                Label = "Efectividad por Areas",
                BackgroundColor = ColorUtil.ColorHexString(54, 162, 235),
                BorderColor = ColorUtil.ColorHexString(54, 162, 235),
                BorderWidth = 1
            };
        barconfig.Data.Datasets.Add(dataSet);

        _chart.Update();
    }

}